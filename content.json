[{"title":"Hello World","date":"2015-11-19T16:00:00.000Z","path":"2015/11/20/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]},{"title":"五分钟学会简单使用git","date":"2015-09-22T16:00:00.000Z","path":"2015/09/23/五分钟学会简单使用git/","text":"五分钟，简单入门。学会之后可以愉快的管理你的文件啦。 ##简单使用## git 其实很简单，有多简单呢？ 1. git init 初始化一个仓库； 2. git add . 添加文件到暂存区； 3. git commit -m&apos;messeage&apos; 提交至版本库； 4. git push origin master 推送至远程仓库； ##分支管理## 什么是平衡分支？实际工作中一般新建平衡分支用于开发调试等，然后再合并到主分支。 1.git checkout -b dev 新建dev分支并切换到dev分支。 相当于：git branch dev 创建dev分支； git checkout dev 切换到dev分支； 2. 开发或者调试结束后 git add * 添加所有文件到暂存区； git commit -m&apos;messeage&apos; 提交至版本库； 3.git checkout master 切换到主分支； git merge dev 合并分支； git branch -d dev 删除分支； ##解决冲突## 什么是冲突？同一份文件同一个地方被不同的协作者修改了，最后一个推送至远程的会产生冲突。 解决冲突：git pull 更新本地仓库 打开冲突文件，找到冲突部分，协调修改。 1 TODO 2 &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD 3 我修改的 4 ======= 5 协作者修改的 6 &gt;&gt;&gt;&gt;&gt;&gt;&gt; 经过协调，修改为 1 TODO 2 经过协调修改的 到这里，你已经基本上掌握了git的使用了，想再深入了解，请点击git Pro中文","tags":[]}]